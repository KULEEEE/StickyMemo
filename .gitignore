# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*


/src/AppUtils.js
/src/PlainNote.js
/src/TodoNote.js
/src/TodoUtils.js


# function TodoNote({note_id, section, deleteNote, moveSection}) {
#   const [todos, setTodos] = useState([]);

#   const addTodo = (task) => {
#     const todo = {
#       id: uuid(),
#       task,
#       completed: false
#     };

#     const newTodos = [...todos, todo];
#     setTodos(newTodos);
#   };

#   return (
#     <div className="single-note">
#       <div className="note-toolbar">
#         <button className='pin'><img src='' alt='pinIcon'/></button>
#         <button className='lang'><img src='' alt='langIcon'/></button>
#       </div>

#       <header className='header'>
#         <input
#           className='new-todo'
#           placeholder='What needs to be done?'
#           value={value}
#           onChange={handleOnChange}
#           onKeyUp={submitTodo}
#           autoFocus />
#       </header>

#       <ul className="todo-list">
#       {todos.map(todo => (
#         <li className={todo.completed}>
#           <div className="view">
#             <input
#               className="toggle"
#               type="checkbox"
#               checked={completed}
#               onChange={() => toggleTodo(id)} />
#             <label>{todo.task}</label>
#             <button
#               className='destroy'
#               onClick={() => deleteTodo(id)} />
#           </div>
#         </li>
#           )
#       )}
#       </ul>
#       <div className="destroy">
#         <button className="destroy" ><img src='' alt='destroyIcon'/></button>
#       </div>
#     </div>
#   );
# }


# function TodoItem({ todo, toggleTodo, deleteTodo }) {
#   const { id, task, completed } = todo;
#   return (
#     <li className={todo.completed}>
#       <div className="view">
#         <input
#           className="toggle"
#           type="checkbox"
#           checked={completed}
#           onChange={() => toggleTodo(id)} />
#         <label>{todo.task}</label>
#         <button
#           className='destroy'
#           onClick={() => deleteTodo(id)} />
#       </div>
#     </li>
#   );
# }